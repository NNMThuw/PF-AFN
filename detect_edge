import numpy as np
import cv2
from matplotlib import pyplot as plt
from PIL import Image 


def get_cloth_mask(image_path):

    image = cv2.imread(image_path)
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)
    _, thresh = cv2.threshold(blurred, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)
    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    mask = np.zeros_like(image)
    cv2.drawContours(mask, contours, -1, (255, 255, 255), -1)

    return mask


def zoom_image(image):
    """
    Zooms into an image around a specified center.

    Parameters:
    - image: The input image.
    - zoom_factor: The zoom factor (e.g., 2.0 for doubling the size).
    - zoom_center: The center of the zoom in the format (x, y).
    """
    zoom_center = (image.shape[1] // 2, 40)
    zoom_factor = 1.1

    zoom_matrix = cv2.getRotationMatrix2D(zoom_center, 0, zoom_factor)
    zoomed_image = cv2.warpAffine(image, zoom_matrix, (image.shape[1], image.shape[0]))
    new_size = (192,256)
    zoomed_image = cv2.resize(zoomed_image, new_size, interpolation=cv2.INTER_CUBIC)
    zoomed_image = cv2.cvtColor(zoomed_image, cv2.COLOR_BGR2RGB)
    return zoomed_image

def preprocess_img(PATH_IMG):
    image = cv2.imread(PATH_IMG)
    new_size = (192,256)
    image = cv2.resize(image, new_size, interpolation=cv2.INTER_NEAREST)
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    return image

def preprocess_cloth(PATH_IMG):
    image = cv2.imread(PATH_IMG)
    new_size = (192,256)
    image = cv2.resize(image, new_size, interpolation=cv2.INTER_NEAREST)
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    return image


if __name__ == "__main__":
    '''
    for i in range(6,11):
        PATH_IMG = f"D:/Datathon/PF-AFN_root/PF-AFN_test/dataset/test_img/{i}_0.jpg"
        cloth = preprocess_img(PATH_IMG)
        cv2.imwrite(PATH_IMG, cv2.cvtColor(cloth, cv2.COLOR_RGB2BGR))
    '''
    for img in range(5,6):
        PATH_IMG = f"D:/Datathon/PF-AFN_root/PF-AFN_test/dataset/test_clothes/{img}_1.jpg"
        cloth = preprocess_cloth(PATH_IMG)
        cv2.imwrite(PATH_IMG, cv2.cvtColor(cloth, cv2.COLOR_RGB2BGR))
        # Mask
        mask = get_cloth_mask(PATH_IMG)
        PATH_SAVE = f"D:/Datathon/PF-AFN_root/PF-AFN_test/dataset/test_edge/{img}_1.jpg"
        cv2.imwrite(PATH_SAVE, cv2.cvtColor(mask, cv2.COLOR_RGB2BGR))
    

    '''
    PATH_IMG = f"D:/Datathon/PF-AFN/PF-AFN_test/dataset/test_clothes/{4}_1.jpg"
    #PATH_IMG = f"D:/Datathon/PF-AFN/PF-AFN_test/dataset/test_img/{4}_0.jpg"
    image = cv2.imread(PATH_IMG)
    image = image[:, 60:540]
    new_size = (192,256)
    cloth = cv2.resize(image, new_size, interpolation=cv2.INTER_CUBIC)
    cloth = cv2.cvtColor(cloth, cv2.COLOR_BGR2RGB)   
    plt.imshow(cloth)
    plt.show()
    
    
    '''
    '''
    for i in range(5,12):
        image_path = f"D:/Datathon/PF-AFN/PF-AFN_test/dataset/test_img/{i}_0.jpg"
        cloth = preprocess_img(image_path)
        cv2.imwrite(f"D:/Datathon/PF-AFN/PF-AFN_test/dataset/test_img/{i}_0.jpg", cv2.cvtColor(cloth, cv2.COLOR_RGB2BGR))
    '''
